// <auto-generated />
using System;
using CompShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompShop.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("CompShop.Common.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("FinalPrice")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("LaptopId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LaptopId");

                    b.ToTable("ShoppingBasket");
                });

            modelBuilder.Entity("CompShop.Common.Config", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Attribute")
                        .HasColumnType("TEXT");

                    b.Property<int>("ConfigType")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Attribute")
                        .IsUnique();

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("CompShop.Common.Laptop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Laptops");
                });

            modelBuilder.Entity("CompShop.Common.Specification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("BasketId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ConfigId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("ConfigId");

                    b.ToTable("Specifications");
                });

            modelBuilder.Entity("CompShop.Common.Basket", b =>
                {
                    b.HasOne("CompShop.Common.Laptop", "Laptop")
                        .WithMany()
                        .HasForeignKey("LaptopId");

                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("CompShop.Common.Specification", b =>
                {
                    b.HasOne("CompShop.Common.Basket", null)
                        .WithMany("Specifications")
                        .HasForeignKey("BasketId");

                    b.HasOne("CompShop.Common.Config", "Config")
                        .WithMany()
                        .HasForeignKey("ConfigId");

                    b.Navigation("Config");
                });

            modelBuilder.Entity("CompShop.Common.Basket", b =>
                {
                    b.Navigation("Specifications");
                });
#pragma warning restore 612, 618
        }
    }
}
